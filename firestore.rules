rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user is an admin
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated() && request.auth.uid == userId;
      
      // Allow creating new user documents during login
      allow create: if request.auth.uid == userId;
      
      // Allow updating lastLogin
      allow update: if request.auth.uid == userId && 
                   request.resource.data.diff(resource.data).affectedKeys().hasOnly(['lastLogin']);
    }

    // Announcements rules
    match /announcements/{announcementId} {
      // All authenticated users can read
      allow read: if isAuthenticated();
      // Only admins can write
      allow write: if isAdmin();
    }

    // Blog posts rules
    match /staff-blog-posts/{postId} {
      // All authenticated users can read
      allow read: if isAuthenticated();
      // Only admins can write
      allow write: if isAdmin();
    }
  }
}
